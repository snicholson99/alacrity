{"version":3,"sources":["components/Chore/index.js","chores.js","App.js","reportWebVitals.js","index.js"],"names":["Chore","props","isChoreDone","onChoreClick","choreName","iconClassName","className","type","value","onChange","chores","name","tickNoise","Audio","App","setState","prevState","Object","keys","some","k","localStorage","setItem","JSON","stringify","state","play","reduce","acc","cur","Boolean","parse","getItem","console","log","this","map","chore","i","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAiBeA,G,MAfD,SAACC,GAAW,IAChBC,EAAwDD,EAAxDC,YAAaC,EAA2CF,EAA3CE,aAAcC,EAA6BH,EAA7BG,UAAWC,EAAkBJ,EAAlBI,cAC9C,OACE,wBAAOC,UAAU,QAAjB,UACE,mBAAGA,UAAWD,IACd,+BAAOD,IACP,uBACEG,KAAK,WACLC,MAAON,EACPO,SAAUN,SCXLO,G,MAAS,CACpB,CACEC,KAAM,cACNN,cAAe,0BAEjB,CACEM,KAAM,YACNN,cAAe,oBAEjB,CACEM,KAAM,MACNN,cAAe,kBAEjB,CACEM,KAAM,UACNN,cAAe,eAEjB,CACEM,KAAM,YACNN,cAAe,mBAEjB,CACEM,KAAM,gBACNN,cAAe,4BCjBbO,EAAY,IAAIC,MAAM,aA4CbC,E,kDAzCb,WAAYb,GAAQ,IAAD,8BACjB,cAAMA,IAORE,aAAe,SAACC,GACd,EAAKW,UAAS,SAAAC,GAAS,gCACpBZ,GAAaY,EAAUZ,IADH,+BAGLa,OAAOC,KAAKF,GAAWG,MAAK,SAAAC,GAAC,OAAKJ,EAAUI,OAHvC,KAInB,WACFC,aAAaC,QAAQlB,EAAWmB,KAAKC,UAAU,EAAKC,MAAMrB,QAE5DQ,EAAUc,QAdV,EAAKD,MAAQf,EAAOiB,QAAO,SAACC,EAAKC,GAAN,mBAAC,eACvBD,GADsB,kBAExBC,EAAIlB,KAAOmB,QAAQP,KAAKQ,MAAMV,aAAaW,QAAQH,EAAIlB,YACtD,IALa,E,qDAoBT,IAAD,OAEP,OADAsB,QAAQC,IAAIC,KAAKV,OAEf,qBAAKnB,UAAU,MAAf,SACGI,EAAO0B,KAAI,SAACC,EAAOC,GAAR,OACV,cAAC,EAAD,CAEEpC,YAAa,EAAKuB,MAAMY,EAAM1B,MAC9BR,aAAc,kBAAM,EAAKA,aAAakC,EAAM1B,OAC5CP,UAAWiC,EAAM1B,KACjBN,cAAegC,EAAMhC,eAJhBiC,Y,GA3BCC,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3071b526.chunk.js","sourcesContent":["import './styles.css';\n\nconst Chore = (props) => {\n  const { isChoreDone, onChoreClick, choreName, iconClassName } = props;\n  return (\n    <label className=\"chore\">\n      <i className={iconClassName}></i>\n      <span>{choreName}</span>\n      <input\n        type=\"checkbox\"\n        value={isChoreDone}\n        onChange={onChoreClick}\n      />\n    </label>\n  );\n}\n\nexport default Chore;\n","export const chores = [\n  {\n    name: \"Cold Shower\",\n    iconClassName: \"fas fa-temperature-low\",\n  },\n  {\n    name: \"Eat Fruit\",\n    iconClassName: \"fas fa-apple-alt\",\n  },\n  {\n    name: \"Run\",\n    iconClassName: \"fas fa-running\",\n  },\n  {\n    name: \"Project\",\n    iconClassName: \"fas fa-code\",\n  },\n  {\n    name: \"Dumbbells\",\n    iconClassName: \"fas fa-dumbbell\",\n  },\n  {\n    name: \"BSU Challenge\",\n    iconClassName: \"fas fa-arrow-circle-up\",\n  }\n];","import { Component } from 'react';\nimport Chore from \"./components/Chore\";\nimport './App.css';\n\nimport { chores } from \"./chores\";\n\nconst tickNoise = new Audio(\"/tick.mp3\");\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = chores.reduce((acc, cur) => ({\n      ...acc,\n      [cur.name]: Boolean(JSON.parse(localStorage.getItem(cur.name)))\n    }), {});\n  }\n  \n  onChoreClick = (choreName) => {\n    this.setState(prevState => ({\n      [choreName]: !prevState[choreName],\n      // allChoresDone: !prevState.includes(false),\n      allChoresDone: !Object.keys(prevState).some(k => !prevState[k])\n    }), () => {\n      localStorage.setItem(choreName, JSON.stringify(this.state[choreName]));\n    });\n    tickNoise.play();\n    // checkIfAllChoresDone();\n  }\n\n  render() {\n    console.log(this.state)\n    return (\n      <div className=\"App\">\n        {chores.map((chore, i) => (\n          <Chore\n            key={i}\n            isChoreDone={this.state[chore.name]}\n            onChoreClick={() => this.onChoreClick(chore.name)}\n            choreName={chore.name}\n            iconClassName={chore.iconClassName}\n          />\n        ))}\n        {/* {allChoresDone && (\n          <p>Woop woop! All chores are done for today.</p>\n        )} */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}